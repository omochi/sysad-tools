#!/bin/bash
[[ "$(uname -s)" == "Darwin" ]] && is_macosx=1 || is_macosx=0
echoe(){
	echo -ne "\033[0;31m" >&2
	echo "$@" >&2
	echo -ne "\033[0m" >&2
}
function_exists(){
	declare -f -F "$1" > /dev/null
	return $?
}
read_line(){
	IFS=$'\n' read -r "$1"
}
ask_if_terminal(){
	local yn
	if [[ -t 0 ]] ; then
		read -p "$1 (y): " yn
		if [[ "$yn" == "y" ]] ; then
			return 0
		else
			return 1
		fi
	fi
}
pushdq(){
	pushd "$1" > /dev/null
}
popdq(){
	popd > /dev/null
}
enable_exit_handler(){
	trap "root_exit_handler" EXIT
}
exit_handlers=()
root_exit_handler(){
	local i
	for ((i=0;i< ${#exit_handlers[@]} ;i++)); do
		eval ${exit_handlers[$i]}
	done
}
add_exit_handler(){
	exit_handlers+=("$1")
}
get_abs_path(){
	( cd "$(dirname "$1")" ; echo "$(pwd)/$(basename "$1")" )
}
# 使用する場合は、
# init_root_temp_dirと、
# enable_exit_handlerを呼び出す事。
# 末尾のXは自動で付く。
make_temp_file(){
	pushdq "$root_temp_dir"
	get_abs_path "$(mktemp "${1}.XXXXXXXX")"	
	popdq
}
init_root_temp_dir(){
	root_temp_dir=$(get_abs_path "$(mktemp -d "temp_dir.XXXXXXXX")")
	add_exit_handler delete_root_temp_dir
}
delete_root_temp_dir(){
	rm -rf "$root_temp_dir"
}
if [[ $is_macosx -ne 0 ]] ; then

user_exists(){
	dscl . -read "/Users/$1" > /dev/null 2>&1
}
get_user_home(){
	dscl . -read "/Users/$1" 2> /dev/null | grep NFSHomeDirectory | cut -d ' ' -f 2
}
else
user_exists(){
	getent passwd "$1" > /dev/null
}
get_user_home(){
	getent passwd "$1" | cut -d : -f 6
}
fi
get_user_keys_file(){
	echo "$(get_user_home "$1")/.ssh/authorized_keys"
}
# $1: pubkey file
get_key_fingerprint(){
	ssh-keygen -lvf "$1" 2> /dev/null
}
get_file_line_num(){
	wc -l "$1" | cut -d ' ' -f 1
}
# $1: file
# $2...: sed args
sed_overwrite(){
	local file; file=$1
	local temp; temp=$(make_temp_file "sed_temp")
	shift
	sed "$@" "$file" > "$temp"
	cat "$temp" > "$file"
}
# $1: user
# $2: pubkey file
ssh_pubkey_add(){
	local user ;      user="$1"
	local group ;     group=$(id -g "$user")
	local keys_file ; keys_file=$(get_user_keys_file "$user")
	local ssh_dir ;   ssh_dir=$(dirname "$keys_file")

	mkdir -p "$ssh_dir"
	chmod 700 "$ssh_dir"
	chown "$user:$group" "$ssh_dir"
	touch "$keys_file"
	chmod 600 "$keys_file"
	chown "$user:$group" "$keys_file" 	

	cat "$2" >> "$keys_file"
}
# $1: user
# $2: needle pubkey file
# $3: [opt] start line 
ssh_pubkey_find(){
	local key ; key=$(cat "$2" | cut -d ' ' -f 2)
	local st=1
	local i=1
	if [[ $# -ge 3 ]] ; then
		st=$3
	fi
	local keys_file ; keys_file=$(get_user_keys_file "$1")
	if [[ ! -f "$keys_file" ]] ; then
		echo "-1"
		return 0
	fi
	while read_line line ; do
		if [[ $i -lt $st ]] ; then
			i=$((i+1))
			continue
		fi
		local test_key ; test_key=$(echo "$line" | cut -d ' ' -f 2)
		if [[ "$key" == "$test_key" ]] ; then
			echo "$i"
			return 0
		fi
		i=$((i+1))
	done < "$keys_file"
	echo "-1"
}

